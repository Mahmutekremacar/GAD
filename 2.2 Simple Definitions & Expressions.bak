#lang racket
#;(define (double v)
  ((if (string? v) string-append +) v v))

#;(define (divOrmul v)
  ((if (> v 5) / *) v v))

(define (twice f v )
  (f (f v)))

#;(define (louder s)
  (string-append s "!"))

#;(twice louder "hello")



#;(lambda (s) (string-append s "!"))

#;(twice (lambda (s) (string-append s "!"))
         "hello")
#;(twice (lambda (s) (string-append s "?!"))
         "hello")

(define (make-add-suffix s2)
  (lambda (s) (string-append s s2)))

(define louder (make-add-suffix "!"))

(define less-sure (make-add-suffix "?"))

(twice less-sure "really")

(twice louder "really")






